pkg = require './package.json'

###
grunt設定
###
module.exports = (grunt) ->
  #
  # Gruntモジュールを読み込む
  #
  for taskName of pkg.devDependencies
    if taskName.substring(0, 6) == 'grunt-' then grunt.loadNpmTasks taskName
  #
  # オリジナルタスク
  #
  grunt.loadTasks( "tasks" );
  #
  # grunt.initConfig
  #
  config =
    pkg: grunt.file.readJSON('package.json')
    #
    # grunt-bake
    #
    bake:
      options:
        content : 'test/bake/config/config.json'
        basePath: 'test/bake'
      source:
        expand: true
        cwd   : 'test/bake'
        src   : ['**/!(_)*.html']
        dest  : 'test/htdocs'
        ext   : '.html'
    #
    # grunt-jshint
    #
    jshint:
      options:
        jshintrc: '.jshintrc'
      source:
        expand: true
        cwd   : 'tasks'
        src   : ['*.js']
        filter: 'isFile'
    #
    # grunt-contrib-clean
    #
    clean: ['test/htdocs/*']
    #
    # grunt-contrib-watch
    #
    watch:
      options:
        spawn: false
      js:
        expand: true
        files: ['tasks/**/*']
        tasks: [
          'jshint'
          'notify:build'
        ]
    #
    # grunt-notify
    #
    notify:
      build:
        options:
          title  : 'ビルド完了'
          message: 'タスクが正常終了しました。'
      watch:
        options:
          title  : '監視開始'
          message: 'ローカルサーバーを起動しました'
    #
    # utf8tosjis
    #
    utf8tosjis:
      dist:
        expand: true
        cwd   : './test/htdocs'
        src   : ['**/!(_)*.html']
        dest  : 'test/htdocs'
        ext   : '.html'
  #
  # grunt.initConfig
  #
  grunt.initConfig( config )
  #
  # Default Task
  #
  grunt.registerTask 'default', []
  #
  # Start Task
  #
  grunt.registerTask 'start', [
    'jshint'
    'bake'
    'utf8tosjis'
    'notify:watch'
    'watch'
  ]
  #
  # Build Task
  #
  grunt.registerTask 'build', [
    'jshint'
    'bake'
    'utf8tosjis'
    'notify:build'
  ]